openapi: "3.0.0"
info:
  title: SuperAdmin Routes
  version: 2.0.0
  description: |
    SuperAdmin Endpoints for admin management and system administration.
    
    Authentication uses JWT tokens stored in httpOnly cookies:
    - accessToken: Short-lived token (15 minutes)
    - refreshToken: Long-lived token (7 days)
    
    All endpoints require SuperAdmin role.

servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /superadmin/createAdmin:
    post:
      summary: Create a new admin
      description: Creates a new admin user. Only accessible by SuperAdmins.
      security:
        - cookieAuth: []
      requestBody:
        description: Admin user object
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  example: "admin_user"
                email:
                  type: string
                  format: email
                  example: "admin@example.com"
                password:
                  type: string
                  minLength: 8
                  example: "securePassword123"
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Doe"
      responses:
        '200':
          description: Admin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Admin created successfully"
                  jobId:
                    type: string
                    example: "job-uuid-12345"
                  admin:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "admin-uuid-123"
                      username:
                        type: string
                        example: "admin_user"
                      email:
                        type: string
                        example: "admin@example.com"
        '400':
          description: Bad request - Invalid admin data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid admin data or username/email already exists"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden - SuperAdmin only
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '409':
          description: Conflict - Admin with this email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Admin with this email already exists"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error while creating admin"

  /superadmin/admins:
    get:
      summary: Get all admins
      description: Retrieves a list of all admin users. Only accessible by SuperAdmins.
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of all admins
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Admins retrieved successfully"
                  count:
                    type: integer
                    example: 5
                  admins:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "admin-uuid-123"
                        username:
                          type: string
                          example: "admin_user"
                        email:
                          type: string
                          example: "admin@example.com"
                        firstName:
                          type: string
                          example: "John"
                        lastName:
                          type: string
                          example: "Doe"
                        role:
                          type: object
                          properties:
                            role:
                              type: string
                              example: "ADMIN"
                        isApproved:
                          type: boolean
                          example: true
                        isVerified:
                          type: boolean
                          example: true
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden - SuperAdmin only
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to retrieve admins"

  /superadmin/deleteAdmin/{id}:
    delete:
      summary: Delete an admin
      description: Deletes an admin user by ID. Only accessible by SuperAdmins.
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Admin user ID to delete
      responses:
        '200':
          description: Admin deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Admin deleted successfully"
                  deletedAdmin:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "admin-uuid-12345"
                      email:
                        type: string
                        example: "admin@example.com"
        '400':
          description: Bad request - Invalid admin ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid admin ID"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden - SuperAdmin only
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Admin not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Admin not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to delete admin"

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken
      description: |
        JWT access token stored in httpOnly cookie. 
        Automatically refreshed using refreshToken cookie when expired.
        Requires SuperAdmin role: { userId, email, userRole: "SUPERADMIN" }

  schemas:
    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
          enum:
            - "Access token required"
            - "Invalid access token"
            - "Session expired. Please login again."
            - "Unauthorized access"
          example: "Access token required"
        error:
          type: string
          enum:
            - "ACCESS_TOKEN_INVALID"
            - "REFRESH_TOKEN_INVALID"
          example: "ACCESS_TOKEN_INVALID"

    ForbiddenError:
      type: object
      properties:
        message:
          type: string
          example: "Access denied: SuperAdmin only"